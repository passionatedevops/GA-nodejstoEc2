name: CICD

on:
  push:
    branches: []

env:
  
  AWS_REGION : "us-east-1"
  REPOSITORY: my-ecr-repo
  IMAGE_TAG: latest

permissions:
  id-token: write # This is required for requesting the JWT

jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::955213590927:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        # with:
        #   registry-type: public


      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.REPOSITORY }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      
        
  # deploy:
  #   needs: build
  #   runs-on: [self-hosted, linux]
  #   steps:
  #     - name: Pull image from ECR
  #       env:
  #         REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         REPOSITORY: ${{ env.REPOSITORY }}
  #         IMAGE_TAG: ${{ env.IMAGE_TAG }}
  #       run: docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG
        
  #     - name: Delete old container
  #       run: docker rm -f nodejs-app-container
  #     - name: Run docker container
  #       run: docker run -d -p 5000:5000 --name nodejs-app-container $REGISTRY/$REPOSITORY:$IMAGE_TAG
